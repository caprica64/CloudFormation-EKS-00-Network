managedNodeGroups:
  - name: ng-1-workers
    labels: { role: workers }
    instanceType: t3.small
    desiredCapacity: 1
    privateNetworking: true
    ssh:
      publicKeyPath: ~/.ssh/id_rsa.pub
      enableSsm: true
    # x86-64 ID us-east-1 k8s 1.19
    #ami: ami-06c778c22c5e09bf7
    # x86-64 ID bottlerocket us-east-1 k8s 1.19
    #ami: ami-0cb9af7951f6501dc
    # arm64 ID bottlerocket us-east-1 k8s 1.19
    #ami: ami-028f78dc58c850ef5

nodeGroups:
  - name: ng-arm-1
    instanceType: t4g.small
    desiredCapacity: 1

  - name: ng-2-builders
    labels: { role: builders }
    instanceType: m5.2xlarge
    desiredCapacity: 2
    privateNetworking: true
    iam:
      withAddonPolicies:
        imageBuilder: true
        
        
nodeGroups:
  - name: ng-1
    instanceType: t3.small
    desiredCapacity: 10
    volumeSize: 80
    ssh:
      allow:


#vpc:
#  id: "vpc-0dd338ecf29863c55"  # (optional, must match VPC ID used for each subnet below)
#  cidr: "192.168.0.0/16"       # (optional, must match CIDR used by the given VPC)
#  subnets:
#    # must provide 'private' and/or 'public' subnets by availibility zone as shown
#    private:
#      eu-north-1a:
#        id: "subnet-0b2512f8c6ae9bf30"
#        cidr: "192.168.128.0/19" # (optional, must match CIDR used by the given subnet)

#      eu-north-1b:
#        id: "subnet-08cb9a2ed60394ce3"
#        cidr: "192.168.64.0/19"  # (optional, must match CIDR used by the given subnet)

#      eu-north-1c:
#        id: "subnet-00f71956cdec8f1dc"
#        cidr: "192.168.0.0/19"   # (optional, must match CIDR used by the given subnet)
